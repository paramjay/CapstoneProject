type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  phone: String!
  gender: String!
  dob: String!
  role: String!
  address: String
}

input RegisterUserInput {
  username: String!
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  phone: String!
  gender: String!
  dob: String!
  role: String!
  address: String
}




type Product {
  id: ID!
  category: String!
  subCategory: String!
  name: String!
  brand: String!
  stock: String!
  size: String!
  price: String!
  salePrice: String!
  description: String
}

input RegisterProductInput {
  category: String!
  subCategory: String!
  name: String!
  brand: String!
  stock: String!
  size: String!
  price: String!
  salePrice: String!
  description: String
}

type Query {
  getUsers: [User],
  getProducts: [Product]
}

type Mutation {
  registerUser(input: RegisterUserInput!): User,
  registerProduct(input: RegisterProductInput!): Product
}
